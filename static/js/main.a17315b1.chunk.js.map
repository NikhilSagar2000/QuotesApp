{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/UI/Card.module.css","pages/PageNotFound.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","hooks/use-http.js","lib/api.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetails.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/AddQuote.js","pages/PageNotFound.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","styles","header","logo","nav","to","activeClassName","active","Layout","props","classes","main","children","QuoteItem","item","text","author","id","QuoteList","sortedQuotes","history","useHistory","location","useLocation","isAscending","URLSearchParams","search","get","quotes","sort","a","b","sorting","onClick","push","list","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","quoteID","commentData","commentId","name","getAllComments","transformedComments","commentObj","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","allQuotesData","useEffect","length","HighlightedQuote","NewCommentForm","commentTextRef","useRef","onAddingComments","current","value","submitFormHandler","event","preventDefault","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","CommentsList","comments","comment","Comments","htmlComment","useState","isAddingComment","setIsAddingComment","params","useParams","allComments","loadCommentsOnAdding","QuoteDetails","routeMatch","useRouteMatch","highligtedQuote","path","exact","url","Card","card","QuoteForm","isEntering","setIsEntering","authorInputRef","textInputRef","when","onFocus","enteredAuthor","enteredText","onAddQuote","isLoading","loading","required","AddQuote","newQuote","PageNotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a17315b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__299qP\",\"logo\":\"MainNavigation_logo__2Rjvx\",\"nav\":\"MainNavigation_nav__2ciBu\",\"active\":\"MainNavigation_active__8qJ4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__JPxYe\",\"loading\":\"QuoteForm_loading__3oV0_\",\"control\":\"QuoteForm_control__3QL-g\",\"actions\":\"QuoteForm_actions__1SZze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2nx9_\",\"loading\":\"NewCommentForm_loading__FaKbo\",\"control\":\"NewCommentForm_control__1b-S7\",\"actions\":\"NewCommentForm_actions__1jw-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1yveK\",\"sorting\":\"QuoteList_sorting__3nw8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__RUWhi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1Yy_u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__3hE5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__KmfLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__39iA1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__21LP2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__MKIVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__21bYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3qF1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"PageNotFound_error__FxkNB\"};","import styles from './MainNavigation.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MainNavigation = () => {\r\n    return (\r\n      <header className={styles.header}>\r\n        <h2 className={styles.logo}>Great Quotes</h2>\r\n        <nav className={styles.nav}>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/quotes\" activeClassName={styles.active}>\r\n                All Quotes\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/add-quote\" activeClassName={styles.active}>\r\n                Add Quotes\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n}\r\n\r\nexport default MainNavigation;","import { Fragment } from \"react\";\r\n\r\nimport classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className='btn'>\n        View in full screen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory,useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  \n  let sortedQuotes;\n  const currentURLParams = new URLSearchParams(location.search);\n\n  const isAscending = currentURLParams.get('sort') === 'asc' ;\n\n  if (isAscending) {\n    sortedQuotes = props.quotes.sort((a, b) => {\n      return a > b ? 1 : -1;\n    });\n  } else {\n    sortedQuotes = props.quotes.sort((a, b) => {\n      return a > b ? 1 : -1;\n    });\n  }\n\n  const sortHandler = () => {\n    history.push('/quotes?sort=' + (isAscending ? 'desc' : 'asc'));\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortHandler}>{`Sort ${isAscending ? 'Descending' : 'Ascending'}`}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n  \"https://quotesapp-899c1-default-rtdb.asia-southeast1.firebasedatabase.app\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteID}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to=\"/add-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuoteFound from '../components/quotes/NoQuotesFound';\r\n\r\nconst AllQuotes = () => {\r\n    const { sendRequest, status, error, data: allQuotesData } = useHttp(getAllQuotes,true);\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if (status === 'pending') {\r\n        return <div className=\"centered\">\r\n            <LoadingSpinner />\r\n        </div>\r\n    }\r\n    if (error) {\r\n        return <div className=\"centered\">\r\n            <h1>{error}</h1>\r\n        </div>\r\n    }\r\n\r\n    if (status === 'completed' && (!allQuotesData || allQuotesData.length === 0)){\r\n        return <div className=\"centered\">\r\n            <NoQuoteFound />\r\n        </div>\r\n    }\r\n\r\n\r\n\r\n    return <QuoteList quotes={allQuotesData} />\r\n}\r\n\r\nexport default AllQuotes;","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{`~ ${props.author}`}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef,useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const {sendRequest, status, error} = useHttp(addComment);\n\n  const { quoteID,onAddingComments } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddingComments();\n      commentTextRef.current.value = '';\n    }\n  }, [status, error, onAddingComments]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    sendRequest({\n      commentData: {\n      text: commentTextRef.current.value\n      },\n      quoteID: quoteID\n  });    \n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n    {status === 'pending' && <LoadingSpinner />}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState,useEffect,useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { sendRequest, status, error, data: allComments } = useHttp(getAllComments, true);\n\n  const { quoteID } = params;\n  let htmlComment;\n\n  useEffect(() => {\n    sendRequest(quoteID);\n  }, [sendRequest, quoteID]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const loadCommentsOnAdding = useCallback(() => {\n    sendRequest(quoteID);\n  }, [sendRequest, quoteID]);\n  \n  if (status === 'pending') {\n    htmlComment = <div className=\"centered\">\n      <LoadingSpinner />\n    </div>\n  }\n\n  if (error) {\n    htmlComment = <div className=\"centered\">{error}</div>\n  }\n\n  if (status === 'completed' && allComments && allComments.length > 0) {\n    htmlComment = <CommentsList comments={allComments} />\n  }\n\n  if (status === 'completed' && (!allComments || allComments.length === 0)) {\n    htmlComment = <div className=\"centered\">\n      No Comments Yet\n    </div>\n  }\n    \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm onAddingComments={ loadCommentsOnAdding} quoteID={ params.quoteID} />}\n      {htmlComment}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment,useEffect } from 'react';\r\nimport { useParams, Link, Route, useRouteMatch } from 'react-router-dom';\r\nimport HighligtedQuote from '../components/quotes/HighlightedQuote';\r\nimport Comments from '../components/comments/Comments';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const routeMatch = useRouteMatch();\r\n  const { sendRequest, status, error , data: highligtedQuote } = useHttp(getSingleQuote,true);\r\n  \r\n  useEffect(() => {\r\n    sendRequest(params.quoteID)\r\n  },[sendRequest,params.quoteID])\r\n\r\n  if (status === 'pending') {\r\n   return  <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n  }\r\n  if (error) {\r\n    return <div className=\"centered\">\r\n      <h3>{error}</h3>\r\n    </div>\r\n  }\r\n  \r\n  if (!highligtedQuote.text) {\r\n        return <h1>No Quote Found</h1>\r\n  }\r\n\r\n    return (\r\n      <Fragment>\r\n        <HighligtedQuote\r\n          text={highligtedQuote.text}\r\n          author={highligtedQuote.author}\r\n        />\r\n        <Route path={routeMatch.path} exact>\r\n          <div className=\"centered\">\r\n            <Link className=\"btn--flat\" to={`${routeMatch.url}/comments`}>\r\n              Load Comments\r\n            </Link>\r\n          </div>\r\n        </Route>\r\n        <Route path={`${routeMatch.path}/comments`}>\r\n          <Comments />\r\n        </Route>\r\n      </Fragment>\r\n    ); \r\n}\r\nexport default QuoteDetails;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef,useState,Fragment } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n   \n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n    \n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n   \n  }\n  function focusHandler() {\n    setIsEntering(true)\n  }\n  function clickHandler() {\n    setIsEntering(false);\n  }\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) => \n          \"Are you sure you want to leave this page? All your data will be lost. \"\n        }\n      />\n      <Card>\n        <form\n          onFocus={focusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} required/>\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef} required></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\" onClick={clickHandler}>\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst AddQuote = () => {\r\n    const { sendRequest, status, error} = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed' && !error) {\r\n            history.push('/quotes');\r\n        }\r\n    }, [history, status, error])\r\n    \r\n    const addQuoteHandler =(newQuote)=> {\r\n        sendRequest(newQuote);\r\n    }   \r\n\r\n    if (status === 'pending') {\r\n        return <div className=\"centered\">\r\n            <LoadingSpinner />\r\n        </div>\r\n    }\r\n    return <QuoteForm onAddQuote={addQuoteHandler}/>\r\n}\r\n\r\nexport default AddQuote\r\n","import styles from './PageNotFound.module.css';\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n      <section className={styles.error}>\r\n        <h1>😭404😭</h1>\r\n        <h2>💔Page Not Found💔</h2>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default PageNotFound;","import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Layout from './components/layout/Layout';\nimport AllQuotes from './pages/AllQuotes';\nimport QuoteDetails from './pages/QuoteDetails';\nimport AddQuote from './pages/AddQuote';\nimport PageNotFound from './pages/PageNotFound';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/QuotesApp\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteID\" >\n          <QuoteDetails />\n        </Route>\n        <Route path=\"/add-quote\" exact>\n          <AddQuote />\n        </Route>\n        <Route path=\"*\" exact>\n          <PageNotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}